import { UnauthorizationException } from "domain/Exception";
import { MakeJWT } from "framework/JWT";
//import { MakeUserGateway } from "gateway/user/UserGateway";

export function getUser(req: any, res: any, next: any) {
    const tokenData = MakeJWT().decode(req.headers.authorization);
    if (tokenData.error) {
        throw new UnauthorizationException("", "Unauthorization.AuthorizationisNotProvide");
    } else if (tokenData.ttl + (tokenData.iat * 1000) < new Date().getTime()) {
        throw new UnauthorizationException("", "Unauthorization.TokenisExpire");
    } else {
        //req.user = MakeUserGateway().findOneById(tokenData.userId);
        next();
    }
}
